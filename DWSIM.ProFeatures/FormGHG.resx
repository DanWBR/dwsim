<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2jH40Nox+/DKMeVgD/AAEAAAAAAAAAAAAAAAAAAAAAD6AdIwuh
        HkQMoB4rAAAAAAAAAAAAAAAAAAAAAAAAAAALnyAYDKUfQQ2jH4sNoh+zDaYgKAAAAAAAmTMFDqQgqg2j
        H/8Nox//DaMf/w2iHrAQnyAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADaEbEwyiH5INox90DqocEgyj
        H80Nox//DaMf/w2jH/8Nox//DaMfxQCAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAACqAAMOoiBxDaMf5g2j
        H6wJpBscDaMf3Q2jH/8Nox//DaMf/w2jH/8NoyBhAAAAAAAAAAAAAAAAAAAAAACZMwUNox+0DaMf/w2j
        H/8Nox//DaQfrQukHC0Mox/1DaMf/w2jH/8Nox//DaMfvwAAAAAAAAAAAAAAAAAAAAANox5mDaMf/w2j
        H/8Nox//DaMf/w2jH/8OpB6XDKMefw2jH/8Nox//DaMf/w2jH/oSpCQOAAAAAAAAAAAAAAAADKMeuQ2j
        H/8Nox//DaMf/w2jH/8Nox//DaMf/w2kHmUNpB/fDaMf/w2jH/8Nox//C6EhLgAAAAAAAAAAAAAAAA2i
        H74Nox//DaMf/w2jH/8Nox//DaMf/w2jH/8Nox/0DqQfgw2jH/8Nox//DaMf/wylH0EAAAAAAAAAAAAA
        AAANox+FDaMf/w2jH/8Nox//DaMf/w2jH/8Nox//DaMf/w2iH74Nox/jDaMf/w2jH/8NoSBPAAAAAAAA
        AAAAAAAAC6YhFw2jH/MNox//DaMf/w2jH/8Nox//DaMf/w2jH/8Nox//DaMfyw2jH/8Nox//DaMfOgAA
        AAAAAAAAAAAAAAAAAAAMox9TDaMf/g2jH/8Nox//DaMf/w2jH/8Nox//DaMf/w2jH/ENox//DaMf/xCf
        ICAAAAAAAAAAAAAAAAAAAAAAAAAAAA2jH2QNox/5DaMf/w2jH/8Nox//DaMf/w2jH/8Nox//DaMf/w2j
        H/0AkiQHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD6IdNA2jH8ANox//DaMf/w2jH/8Nox//DaMf/w2j
        H/8NoyDSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD6IdNAyiH5INox/mDaMf/w2j
        H/8Nox//DKMfkwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAg2j
        HT0OpCCqDaMf/gyjH1MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAA6iHl0MniQVAAAAAJ//AADnBwAA+wMAAPyDAADwQQAA8CEAAOAhAADgAQAA4AEAAPAB
        AAD4AQAA/AEAAP4BAAD/gQAA//MAAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAPpR4iDaIfvg2jH7YOox5eAJ8gCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2kH2INox//DaMf/w2jH/8Nox/mDaQeZQC/AAQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMoh8pDaQfcw6jH6cOoh6oDaIfjA6jIEgA/wABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJIkBw2hIE8MpB9qDqQflA2kH98Nox//DaMf1Q6j
        IEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJpyMdDaIesA2jH/8Nox//DaMf/w2jH/8Nox//DaMf/w2j
        H8sLpSAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAg+j
        HkUNoyCyDaMf/wyiH6UMoiMWAAAAAAAAAAAAAAAAD6IfIQ2jH+UNox//DaMf/w2jH/8Nox//DaMf/w2j
        H/8Nox//DaMf/w2jH/kMoiBYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAANox09DKMfzQ2iH+0NpB9RAAAAAAAAAAAMoiA/DKMf9Q2jH/8Nox//DaMf/w2j
        H/8Nox//DaMf/w2jH/8Nox//DaMf/w2jH/sLoR5EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqgADDqMebw2jH/IMoh+SAJkzBQAAAAAMoiA/DaMf9A2j
        H/8Nox//DaMf/w2jH/8Nox//DaMf/w2jH/8Nox//DaMf/w2jH+UOqhwSAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOpRwlDKIfkg2jH/4Nox+9DqocEgAA
        AAAOoyBIDaMf+g2jH/8Nox//DaMf/w2jH/8Nox//DaMf/w2jH/8Nox//DaMf/w2jH4sAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQnyAQDKMfpA2jH/0Nox//DaMf/w2j
        H/8Noh/XCqcdGgAAAAANox9kDaMf/w2jH/8Nox//DaMf/w2jH/8Nox//DaMf/w2jH/8Nox//DaMf9g2m
        GhQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEaIiHg2kH98Nox//DaMf/w2j
        H/8Nox//DaMf/w2jH/8Nox/ZCqcdGgAAAAANoyCZDaMf/w2jH/8Nox//DaMf/w2jH/8Nox//DaMf/w2j
        H/8Nox//DqMfbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABCfIBANox/VDaMf/w2j
        H/8Nox//DaMf/w2jH/8Nox//DaMf/w2jH/8NpB/UDaYaFACSJAcNpB/UDaMf/w2jH/8Nox//DaMf/w2j
        H/8Nox//DaMf/w2jH/8NoyDCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADaQenw2j
        H/8Nox//DaMf/w2jH/8Nox//DaMf/w2jH/8Nox//DaMf/w2jH/8Nox/LGpkaCg6kIDgNox/8DaMf/w2j
        H/8Nox//DaMf/w2jH/8Nox//DaMf/w2jH/gAnyAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABCl
        IR8Nox/8DaMf/w2jH/8Nox//DaMf/w2jH/8Nox//DaMf/w2jH/8Nox//DaMf/w2jH/8OpCCqAP8AAQyj
        IJANox//DaMf/w2jH/8Nox//DaMf/w2jH/8Nox//DaMf/w2kHjsAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAADKIfaw2jH/8Nox//DaMf/w2jH/8Nox//DaMf/w2jH/8Nox//DaMf/w2jH/8Nox//DaMf/w2j
        H/8Moh98D6UeEQ2jH+4Nox//DaMf/w2jH/8Nox//DaMf/w2jH/8Nox//DaQgXwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAOox+VDaMf/w2jH/8Nox//DaMf/w2jH/8Nox//DaMf/w2jH/8Nox//DaMf/w2j
        H/8Nox//DaMf/w2jH/sOpCA4DaMfdA2jH/8Nox//DaMf/w2jH/8Nox//DaMf/w2jH/8Mox5/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2jH5sNox//DaMf/w2jH/8Nox//DaMf/w2jH/8Nox//DaMf/w2j
        H/8Nox//DaMf/w2jH/8Nox//DaMf/w2jHtoNoRsTDaMf4w2jH/8Nox//DaMf/w2jH/8Nox//DaMf/w6j
        H5YAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADqQfgw2jH/8Nox//DaMf/w2jH/8Nox//DaMf/w2j
        H/8Nox//DaMf/w2jH/8Nox//DaMf/w2jH/8Nox//DaMf/wyiHo8NoiB5DaMf/w2jH/8Nox//DaMf/w2j
        H/8Nox//DaMfngAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOoiBHDaMf/w2jH/8Nox//DaMf/w2j
        H/8Nox//DaMf/w2jH/8Nox//DaMf/w2jH/8Nox//DaMf/w2jH/8Nox//DaMf+g2jHT0Nox/2DaMf/w2j
        H/8Nox//DaMf/w2jH/8Moh+lAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC/AAQNox/lDaMf/w2j
        H/8Nox//DaMf/w2jH/8Nox//DaMf/w2jH/8Nox//DaMf/w2jH/8Nox//DaMf/w2jH/8Nox//DKMeuQ2j
        H5sNox//DaMf/w2jH/8Nox//DaMf/w2jIKEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6i
        IHENox//DaMf/w2jH/8Nox//DaMf/w2jH/8Nox//DaMf/w2jH/8Nox//DaMf/w2jH/8Nox//DaMf/w2j
        H/8Nox//DqQfgw2jH/8Nox//DaMf/w2jH/8Nox//DKQgkQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAKorBg2jH9gNox//DaMf/w2jH/8Nox//DaMf/w2jH/8Nox//DaMf/w2jH/8Nox//DaMf/w2j
        H/8Nox//DaMf/w2jH/8Nox/DDaMf5g2jH/8Nox//DaMf/w2jH/8Oox+CAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAD6MfMg2jH/gNox//DaMf/w2jH/8Nox//DaMf/w2jH/8Nox//DaMf/w2j
        H/8Nox//DaMf/w2jH/8Nox//DaMf/w2jH/8Mox/ODaMf/w2jH/8Nox//DaMf/wyiH2sAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADqMeXg2jH/4Nox//DaMf/w2jH/8Nox//DaMf/w2j
        H/8Nox//DaMf/w2jH/8Nox//DaMf/w2jH/8Nox//DaMf/w2jH/MNox//DaMf/w2jH/8Nox//DqMgSAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADKMgaQ2jH/wNox//DaMf/w2j
        H/8Nox//DaMf/w2jH/8Nox//DaMf/w2jH/8Nox//DaMf/w2jH/8Nox//DaMf/w2jH/8Nox//DaMf/w2j
        H/8OpRwlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADaMdTg2j
        H/ENox//DaMf/w2jH/8Nox//DaMf/w2jH/8Nox//DaMf/w2jH/8Nox//DaMf/w2jH/8Nox//DaMf/w2j
        H/8Nox//DaMf+wCZMwUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAD6UeIg2jH8ANox//DaMf/w2jH/8Nox//DaMf/w2jH/8Nox//DaMf/w2jH/8Nox//DaMf/w2j
        H/8Nox//DaMf/w2jH/8Mox/OAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAP8AAQyiHlUNox/VDaMf/w2jH/8Nox//DaMf/w2jH/8Nox//DaMf/w2j
        H/8Nox//DaMf/w2jH/8Nox//DaMf/w2jIJkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AAEMpSE+DaMemA2jH+wNox//DaMf/w2j
        H/8Nox//DaMf/w2jH/8Nox//DaMf/w2jH/8Nox//DaIgYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJkzBQ6i
        IEcNox6YDaMf5w2jH/8Nox//DaMf/w2jH/8Nox//DaMf/w2jH/8NoyEnAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAqgADD6QhRgyiH6UNox/3DaMf/w2jH/8Nox//DKMf4QAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+gHSMOpCCqDaMf/Q2jH/8Noh+dAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANoR85DaIf7Qyk
        HlQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAOpCA4D6UeEQAAAAAAAAAAAAAAAOf////h//H/+H+Af/8fAD//zwAf//OAD//xwAf/wOAH/4BgB/8A
        MAP+ABgD/gAIA/4ADAP8AAYD/AACAfwAAQH+AAEB/gAAAf8AAAH/AAAB/4AAA//AAAP/4AAD//AAA//4
        AAP//gAD//+AB///8Af///4H////h////+//////
</value>
  </data>
</root>